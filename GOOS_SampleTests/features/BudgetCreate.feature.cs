// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

#region Designer generated code

using TechTalk.SpecFlow;

#pragma warning disable

namespace GOOS_SampleTests.Features
{
	[System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
	[System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	[Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
	public partial class BudgetCreateFeature
	{
		private static TechTalk.SpecFlow.ITestRunner testRunner;

		[Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
		public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
		{
			testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
			var featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BudgetCreate",
				null, ProgrammingLanguage.CSharp, new string[]
				{
					"web",
					"CleanBudgets"
				});
			testRunner.OnFeatureStart(featureInfo);
		}

		[Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
		public static void FeatureTearDown()
		{
			testRunner.OnFeatureEnd();
			testRunner = null;
		}

		[Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
		public virtual void TestInitialize()
		{
			if (((testRunner.FeatureContext != null)
			     && (testRunner.FeatureContext.FeatureInfo.Title != "BudgetCreate")))
			{
				FeatureSetup(null);
			}
		}

		[Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
		public virtual void ScenarioTearDown()
		{
			testRunner.OnScenarioEnd();
		}

		public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
		{
			testRunner.OnScenarioStart(scenarioInfo);
		}

		public virtual void ScenarioCleanup()
		{
			testRunner.CollectScenarioErrors();
		}

		[Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
		[Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Add a budget successfully")]
		[Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "BudgetCreate")]
		[Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("web")]
		[Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("CleanBudgets")]
		public virtual void AddABudgetSuccessfully()
		{
			var scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a budget successfully", ((string[]) (null)));
#line 6
			this.ScenarioSetup(scenarioInfo);
#line 7
			testRunner.Given("go to adding budget page", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "Given ");
#line 8
			testRunner.When("I add a buget 2000 for \"2017-10\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)), "When ");
#line 9
			testRunner.Then("it should display \"added successfully\"", ((string) (null)), ((TechTalk.SpecFlow.Table) (null)),
				"Then ");
#line hidden
			this.ScenarioCleanup();
		}
	}
}

#pragma warning restore

#endregion